openapi: 3.0.3
info:
  title: Fixed API Contract - Solution
  version: 1.0.0
  description: |
    ✅ This is the corrected version of the broken contract.

    **Errors Fixed:**
    1. ✅ Added missing operationId to GET /users
    2. ✅ Fixed broken $ref to UserResponse (changed to User)
    3. ✅ Fixed duplicate operationId (createUser → getUserById)
    4. ✅ Changed userId parameter type from boolean to string
    5. ✅ Changed 404 response code from number to string
    6. ✅ Fixed typo in enum: "electronicss" → "electronics"
    7. ✅ Added required: true to POST /orders requestBody
    8. ✅ Fixed age maximum from -1 to 120
    9. ✅ Removed space from "phone number" → "phoneNumber"
    10. ✅ Removed duplicate "active" enum value
    11. ✅ Fixed password minLength/maxLength (8 min, 20 max)
    12. ✅ Changed Product.price from string to number
    13. ✅ Changed Product.inStock from string to boolean
    14. ✅ Added missing OrderItem schema
    15. ✅ Added "pending" to Order.status enum

paths:
  /users:
    get:
      summary: Get all users
      operationId: listUsers  # FIXED: Added operationId
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'  # FIXED: Changed to existing schema

  /users/{userId}:
    get:
      summary: Get user by ID
      operationId: getUserById  # FIXED: Changed to unique operationId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string  # FIXED: Changed from boolean to string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':  # FIXED: Changed from number to string
          description: User not found

  /products:
    get:
      summary: List products
      operationId: listProducts
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum:
              - electronics  # FIXED: Removed extra 's'
              - clothing
              - food
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /orders:
    post:
      summary: Create order
      operationId: createOrder
      requestBody:
        required: true  # FIXED: Added required field
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

components:
  schemas:
    User:
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        age:
          type: integer
          minimum: 0
          maximum: 120  # FIXED: Changed from -1 to realistic max
        phoneNumber:  # FIXED: Removed space
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            # FIXED: Removed duplicate "active"

    CreateUser:
      type: object
      required:
        - email
        - name
        - password
      properties:
        email:
          type: string
          format: email
        name:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 8   # FIXED: Swapped values to make sense
          maxLength: 20

    Product:
      type: object
      required:
        - id
        - name
        - price
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number  # FIXED: Changed from string
          minimum: 0
        category:
          type: string
          enum:
            - electronics
            - clothing
            - food
        inStock:
          type: boolean  # FIXED: Changed from string

    Order:
      type: object
      required:
        - userId
        - items
        - totalAmount
      properties:
        userId:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'  # Now this schema exists below
        totalAmount:
          type: number
          format: float
        status:
          type: string
          default: pending
          enum:
            - pending    # FIXED: Added missing default value to enum
            - confirmed
            - shipped
            - delivered

    OrderItem:  # FIXED: Added missing schema
      type: object
      required:
        - productId
        - quantity
        - price
      properties:
        productId:
          type: string
        quantity:
          type: integer
          minimum: 1
        price:
          type: number
          format: float