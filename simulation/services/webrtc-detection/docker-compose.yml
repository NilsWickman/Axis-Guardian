version: '3.8'

services:
  webrtc-detection:
    build: .
    container_name: webrtc-detection-service
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - STUN_SERVER=stun:stun.l.google.com:19302
      - MODEL_PATH=yolov8n.pt
      - CONFIDENCE_THRESHOLD=0.5
      - IOU_THRESHOLD=0.45
      - FRAME_SKIP=1
      - MAX_FPS=30
      - LOG_LEVEL=INFO
      # Camera URLs - update these to match your setup
      - CAMERA1_URL=rtsp://host.docker.internal:8554/camera1
      - CAMERA2_URL=rtsp://host.docker.internal:8554/camera2
      - CAMERA3_URL=rtsp://host.docker.internal:8554/camera3
    volumes:
      # Mount models directory to persist downloads
      - ./models:/root/.cache/ultralytics
    networks:
      - surveillance-network
    restart: unless-stopped
    depends_on:
      - mediamtx

  # Optional: Include MediaMTX for camera simulation
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    ports:
      - "8554:8554"  # RTSP
      - "8888:8888"  # HLS
      - "8889:8889"  # WebRTC
      - "9997:9997"  # API
    volumes:
      - ../../docker-compose/mediamtx.yml:/mediamtx.yml
      - mediamtx_recordings:/recordings
    networks:
      - surveillance-network
    restart: unless-stopped

networks:
  surveillance-network:
    driver: bridge

volumes:
  mediamtx_recordings:
